name: BlackDuck Scan Workflow

on:
  schedule:
   - cron:  '0 0 * * SUN'
  workflow_dispatch:

jobs:
  build:
    if: contains(github.ref, 'master-ci') == true
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 'PREP - GitHub context'
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: 'SETUP - Checkout Branch Code'
        uses: actions/checkout@v2
        
      - run: echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
        shell: bash

      - name: 'SETUP - JAVA JDK 16'
        uses: actions/setup-java@v2
        with:
            java-version: 16
            distribution: 'adopt'

      - name: 'GRANT PERMISSION - Grant execute permission for gradlew'
        run: chmod +x gradlew

      - name: 'SETUP - Cache Gradle packages'
        uses: actions/cache@v2
        with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
            restore-keys: |
              ${{ runner.os }}-gradle-
      - name: 'SETUP - gradle.properties'
        run: |
          echo "artifactoryContextUrl=${{ secrets.LCT_ARTIFACTORY_CONTEXT_URL }}" >> gradle.properties
          echo "artifactoryUsername=${{ secrets.LCT_ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "artifactoryPassword=${{ secrets.LCT_ARTIFACTORY_PASSWORD }}" >> gradle.properties
      - name: "BUILD - Build with Gradle"
        uses: gradle/gradle-build-action@v2
        with: 
          arguments: build -x test 

      - name: 'RUN- Perform Blackduck scan'
        timeout-minutes: 5
        uses: blackducksoftware/github-action@v2
        with:
          version: 7
          args: '--blackduck.url="${{ secrets.LCT_BLACKDUCK_URL }}"
          --blackduck.api.token="${{ secrets.LCT_BLACKDUCK_API_TOKEN }}"
          --detect.project.name=${{ env.REPOSITORY_NAME }}
          --detect.project.version.name=master-ci
          --detect.blackduck.signature.scanner.upload.source.mode=false
          --detect.blackduck.signature.scanner.exclusion.pattern.search.depth=0
          --detect.tools.excluded=SIGNATURE_SCAN
          --detect.project.tags=LCT
          --detect.gradle.excluded.configurations=checkstyle,serviceTestImplementation,serviceTestCompileClasspath,serviceTestRuntimeClasspath,testImplementation,testRuntimeOnly,testCompileClasspath,testCompileOnly,testRuntime,testRuntimeClasspath,testRuntimeOnly,testCompile
          --detect.wait.for.results=false
          --detect.risk.report.pdf=true
          --detect.npm.include.dev.dependencies=false
          --detect.report.timeout=3600
          --detect.project.user.groups=lumplatform-ct-admins,lumplatform-ct-users
          --detect.project.codelocation.unmap=true'
      - name: Notify Teams Channel
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.LCT_BLACKDUCK_MS_TEAMS_WEBHOOK }}
          title: "${{ env.REPOSITORY_NAME }} : SUCCESSFUL"
          summary: "${{ env.REPOSITORY_NAME }} : SUCCESSFUL"
