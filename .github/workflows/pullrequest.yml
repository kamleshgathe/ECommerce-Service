name: Pullrequest-WF

on:
  pull_request:
    branches:
      - master-ci
      - release/**
      - teams/**

  workflow_dispatch:
     inputs:
      version:
        description: 'Version for build artifacts'
        required: true
        default: ''
      depVersion:
        description: 'Version for LCT foundation build artifacts'
        required: true
        default: ''
      platformVersion:
        description: 'Version for yoda foundation build artifacts'
        required: true
        default: '' 
       
env:
  SNAPSHOT_VERSION: 2023.5.0


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'PREP - GitHub context'
        env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Checkout PR
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Base branch check
        run: |
          echo "PR_BASE_BRANCH=${{ github.event.pull_request.base.ref }}" >>  $GITHUB_ENV
      - name: Current branch name
        run: |
          echo "BRANCH_VERSION=`echo ${{env.PR_BASE_BRANCH}} | sed -e 's,.*/\(.*\),\1,'`" >>  $GITHUB_ENV
      - name: Setting Env variables
        if: github.event.pull_request.base.ref == 'master-ci'
        env:
          LABEL: SNAPSHOT
        run: |
          echo "BUILD_VERSION=${{env.SNAPSHOT_VERSION}}-${{env.LABEL}}" >> $GITHUB_ENV
          echo "DEP_VERSION_LOOKUP=${{env.SNAPSHOT_VERSION}}-${{env.LABEL}}" >> $GITHUB_ENV
          echo "PLATFORM_VERSION_LOOKUP=${{env.SNAPSHOT_VERSION}}-${{env.LABEL}}" >> $GITHUB_ENV
      - name: Setting Env variables
        if: startsWith(github.base_ref, 'teams/')
        env:
          LABEL: ${{env.BRANCH_VERSION}}
        run: |
          echo "BUILD_VERSION=${{env.SNAPSHOT_VERSION}}-${{env.LABEL}}" >> $GITHUB_ENV
          echo "DEP_VERSION_LOOKUP=${{env.SNAPSHOT_VERSION}}-${{env.LABEL}}" >> $GITHUB_ENV
          echo "PLATFORM_VERSION_LOOKUP=${{env.SNAPSHOT_VERSION}}-${{env.LABEL}}" >> $GITHUB_ENV
      - name: Setting Env variables
        if: startsWith(github.base_ref, 'release/')
        env:
          LABEL: rc
        run: |
          echo "BUILD_VERSION=${{env.BRANCH_VERSION}}-${{env.LABEL}}-${{github.run_number}}" >> $GITHUB_ENV
          echo "DEP_VERSION_LOOKUP=${{env.BRANCH_VERSION}}-${{env.LABEL}}+" >> $GITHUB_ENV
          echo "PLATFORM_VERSION_LOOKUP=${{env.BRANCH_VERSION}}-${{env.LABEL}}+" >> $GITHUB_ENV
      - name: 'SETUP - JAVA JDK 17'
        uses: actions/setup-java@v3
        with:
            java-version: 17
            distribution: 'zulu'
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.3
      - name: 'SETUP - Cache Gradle packages'
        uses: actions/cache@v2
        with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
            restore-keys: |
              ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: 'SETUP - gradle.properties'
        run: |
          echo "artifactoryContextUrl=${{ secrets.LCT_ARTIFACTORY_CONTEXT_URL }}" >> gradle.properties
          echo "artifactoryUsername=${{ secrets.LCT_ARTIFACTORY_USERNAME }}" >> gradle.properties
          echo "artifactoryPassword=${{ secrets.LCT_ARTIFACTORY_PASSWORD }}" >> gradle.properties
      - name: Build and Checks
        uses: gradle/gradle-build-action@v1 
        with: 
          arguments: |
              -Dorg.gradle.internal.http.socketTimeout=120000 
              -Dorg.gradle.internal.http.connectionTimeout=120000
              -Pversion=${{env.BUILD_VERSION}}
              -PdepVersion=${{env.DEP_VERSION_LOOKUP}}
              -PplatformVersion=${{env.PLATFORM_VERSION_LOOKUP}}
              clean bootJar check
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: |
            build/test-results/**/*.xml
      - name: Publish reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test-reports
          path: |
            build/reports
            build/test-results
          retention-days: 1 
      - name: 'Coverage Report'
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: build/reports/jacoco/test/jacocoTestReport.xml
